{"version":3,"file":"static/js/808.1ac6d8b0.chunk.js","mappings":"0JAGIA,E,sHCFJ,EAAsC,4CAAtC,EAA4F,gCAA5F,EAA6I,uCAA7I,EAAwM,0CAAxM,EAA4P,gCAA5P,EAAqS,+BAArS,EAAkV,oCAAlV,EAA0Y,0CCA1Y,GACEC,WAFmC,qBAAXC,QAA0BA,OAAOD,YAAcC,OAAOD,WAAWE,KAAKD,SFI1FE,EAAQ,IAAIC,WAAW,IACd,SAASC,IAEtB,IAAKN,KAEHA,EAAoC,qBAAXE,QAA0BA,OAAOF,iBAAmBE,OAAOF,gBAAgBG,KAAKD,SAGvG,MAAM,IAAIK,MAAM,4GAIpB,OAAOP,EAAgBI,EACxB,CGTD,IAFA,IAAMI,EAAY,GAETC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,MAAM,IAGzC,SAASC,EAAgBC,GAAiB,IAAZC,EAAY,uDAAH,EAG5C,OAAQP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,MAAMC,aACtf,CCYD,MAxBA,SAAYC,EAASC,EAAKH,GACxB,GAAII,EAAAA,aAAsBD,IAAQD,EAChC,OAAOE,EAAAA,aAIT,IAAMC,GADNH,EAAUA,GAAW,CAAC,GACDI,SAAWJ,EAAQX,KAAOA,KAK/C,GAHAc,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBF,EAAK,CACPH,EAASA,GAAU,EAEnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACxBS,EAAIH,EAASN,GAAKW,EAAKX,GAGzB,OAAOS,CACR,CAED,OAAOL,EAAgBO,EACxB,E,SCqHD,EApIuB,WACtB,IAAQE,GAAaC,EAAAA,EAAAA,KAAbD,SACR,GAA4BE,EAAAA,EAAAA,UAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAyBC,EAAAA,EAAAA,KAAzBD,qBACR,GAA6CE,EAAAA,EAAAA,KAArCC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAAWC,EAAnC,EAAmCA,MAC7BC,GAAWC,EAAAA,EAAAA,MACjB,ECd6B,WAC7B,IAAQJ,GAAmBD,EAAAA,EAAAA,KAAnBC,eACAR,GAAaC,EAAAA,EAAAA,KAAbD,SAEFa,EAAc,yCAAG,WAAOC,GAAP,0EAClBd,EADkB,gCAEfQ,EAAe,QAASR,EAASe,GAAI,CAC1CC,aAAa,GAAD,eAAMhB,EAASgB,cAAf,YAAkCF,OAH1B,2CAAH,sDAOpB,MAAO,CAAED,eAAAA,EACT,CDE2BI,GAAnBJ,EAAR,EAAQA,eAEFK,EAAc,yCAAG,WAAOC,GAAP,yEACtBA,EAAEC,mBACEjB,EAAS,IAFS,uBAGrBE,EAAqB,CACpBgB,KAAMC,EAAAA,EAAAA,MACNC,QAAS,gCALW,8BAUlBvB,EAVkB,sBAWjBA,EAASwB,QAAU,KAXF,uBAYpBnB,EAAqB,CACpBgB,KAAMC,EAAAA,EAAAA,MACNC,QAAS,8BAdU,+BAmBjBpB,EAAS,KAnBQ,wBAoBpBE,EAAqB,CACpBgB,KAAMC,EAAAA,EAAAA,MACNC,QAAS,iCAtBU,4CA2Bff,EAAe,QAASR,EAASe,GAAI,CAC1CS,QACoB,IAAnBxB,EAASwB,QAAkBC,KAAKC,MAAe,IAATvB,GAAgB,IAAO,MA7B1C,yBAgCfU,EAAe,CACpBQ,KAAM,MACNlB,OAAQA,EACRqB,QAASxB,EAASwB,QAAWC,KAAKC,MAAe,IAATvB,GAAgB,IAAO,IAC/DwB,MAAO,gBACPC,UAAWC,EAAAA,GAAAA,SAAmB,IAAIC,MAClCf,GAAIgB,MAtCgB,YAyCjBrB,EAzCiB,wBA0CpBL,EAAqB,CACpBgB,KAAMC,EAAAA,EAAAA,MACNC,QAAS,0CA5CU,2BAiDrBZ,EAAS,iBAETN,EAAqB,CACpBgB,KAAMC,EAAAA,EAAAA,QACNC,QAAS,uCArDW,4CAAH,sDA0DpB,OACC,iBAAKS,UAAWC,EAAhB,WACC,iBAAKD,UAAWC,EAAhB,WACC,iBAAKD,UAAWC,EAAhB,WACC,iBAAKD,UAAWC,EAAhB,WACC,mCACA,eAAGD,UAAWC,EAAd,sBACWjC,GAAYA,EAASwB,QADhC,WAID,iBAAKQ,UAAWC,EAAhB,WACC,kBACCC,IAAI,QACJb,KAAK,SACLc,YAAY,IACZC,MAAOjC,EACPkC,SAAU,SAAClB,GAAD,OAAOf,EAAUe,EAAEmB,OAAOF,MAA1B,KAEX,oDAGF,iBAAKJ,UAAWC,EAAhB,WACC,mBACCD,UAAU,MACVO,QAAS,WACRnC,EAAU,GACV,EAJF,mBAOA,mBACC4B,UAAU,MACVO,QAAS,WACRnC,EAAU,IACV,EAJF,oBAOA,mBACC4B,UAAU,MACVO,QAAS,WACRnC,EAAU,IACV,EAJF,oBAOA,mBACC4B,UAAU,MACVO,QAAS,WACRnC,EAAU,IACV,EAJF,0BASAK,IACD,mBAAQuB,UAAS,UAAKC,EAAL,QAA8BM,QAASrB,EAAxD,uBAIAT,IACA,mBAAQuB,UAAS,UAAKC,EAAL,QAA8BO,UAAQ,EAAvD,0BAMH,C","sources":["../node_modules/uuid/dist/esm-browser/rng.js","webpack://have-fun/./src/pages/addTransaction/AddTransaction.module.scss?b320","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","pages/addTransaction/AddTransaction.js","hooks/transactions/useTransaction.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// extracted by mini-css-extract-plugin\nexport default {\"add-money-container\":\"AddTransaction_add-money-container__e1pYu\",\"add-btn\":\"AddTransaction_add-btn__YZEbs\",\"add-money-card\":\"AddTransaction_add-money-card__v9szL\",\"add-money-content\":\"AddTransaction_add-money-content__BB6qO\",\"balance\":\"AddTransaction_balance__daKwE\",\"amount\":\"AddTransaction_amount__WzWNZ\",\"input-field\":\"AddTransaction_input-field__aSpbt\",\"add-money-buttons\":\"AddTransaction_add-money-buttons__Jiuat\"};","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { Timestamp } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ACTIONS } from \"../../actions/notification/Actions\";\nimport { useUpdateDocument } from \"../../hooks/data/useUpdateDocument\";\nimport { useUserDataContext } from \"../../hooks/data/useUserDataContext\";\nimport { useNotificationContext } from \"../../hooks/notification/useNotificationContext\";\nimport { useTransaction } from \"../../hooks/transactions/useTransaction\";\nimport styles from \"./AddTransaction.module.scss\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst AddTransaction = () => {\n\tconst { document } = useUserDataContext();\n\tconst [amount, setAmount] = useState(0);\n\tconst { dispatchNotification } = useNotificationContext();\n\tconst { updateDocument, isPending, error } = useUpdateDocument();\n\tconst navigate = useNavigate();\n\tconst { addTransaction } = useTransaction();\n\n\tconst handleAddMoney = async (e) => {\n\t\te.preventDefault();\n\t\tif (amount < 20) {\n\t\t\tdispatchNotification({\n\t\t\t\ttype: ACTIONS.ERROR,\n\t\t\t\tpayload: \"Amount is too small to add!\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (document) {\n\t\t\tif (document.balance > 10000) {\n\t\t\t\tdispatchNotification({\n\t\t\t\t\ttype: ACTIONS.ERROR,\n\t\t\t\t\tpayload: \"Your balance is too high!\",\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (amount > 10000) {\n\t\t\t\tdispatchNotification({\n\t\t\t\t\ttype: ACTIONS.ERROR,\n\t\t\t\t\tpayload: \"Cannot add more than 10000$!\",\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait updateDocument(\"users\", document.id, {\n\t\t\t\tbalance:\n\t\t\t\t\tdocument.balance * 1000 + (Math.round(amount * 100) / 100) * 1000,\n\t\t\t});\n\n\t\t\tawait addTransaction({\n\t\t\t\ttype: \"add\",\n\t\t\t\tamount: amount,\n\t\t\t\tbalance: document.balance + (Math.round(amount * 100) / 100) * 1000,\n\t\t\t\ttitle: \"Money deposit\",\n\t\t\t\tcreatedAt: Timestamp.fromDate(new Date()),\n\t\t\t\tid: uuidv4(),\n\t\t\t});\n\n\t\t\tif (error) {\n\t\t\t\tdispatchNotification({\n\t\t\t\t\ttype: ACTIONS.ERROR,\n\t\t\t\t\tpayload: \"Couldn't add money, please try later!\",\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnavigate(\"/transactions\");\n\n\t\t\tdispatchNotification({\n\t\t\t\ttype: ACTIONS.SUCCESS,\n\t\t\t\tpayload: \"Money has been successfully added!\",\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={styles[\"add-money-container\"]}>\n\t\t\t<div className={styles[\"add-money-card\"]}>\n\t\t\t\t<div className={styles[\"add-money-content\"]}>\n\t\t\t\t\t<div className={styles.balance}>\n\t\t\t\t\t\t<span>USD</span>\n\t\t\t\t\t\t<p className={styles[\"amount\"]}>\n\t\t\t\t\t\t\tBalance: {document && document.balance}$\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles[\"input-field\"]}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tmax=\"10000\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tplaceholder=\"0\"\n\t\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\t\tonChange={(e) => setAmount(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p>Minimal amout 20$</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles[\"add-money-buttons\"]}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetAmount(50);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t50 $\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetAmount(100);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t100 $\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetAmount(250);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t250 $\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetAmount(500);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t500 $\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{!isPending && (\n\t\t\t\t<button className={`${styles[\"add-btn\"]} btn`} onClick={handleAddMoney}>\n\t\t\t\t\tAdd money\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isPending && (\n\t\t\t\t<button className={`${styles[\"add-btn\"]} btn`} disabled>\n\t\t\t\t\tLoading...\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default AddTransaction;\n","import { useUpdateDocument } from \"../data/useUpdateDocument\";\nimport { useUserDataContext } from \"../data/useUserDataContext\";\n\nexport const useTransaction = () => {\n\tconst { updateDocument } = useUpdateDocument();\n\tconst { document } = useUserDataContext();\n\n\tconst addTransaction = async (transaction) => {\n\t\tif (document) {\n\t\t\tawait updateDocument(\"users\", document.id, {\n\t\t\t\ttransactions: [...document.transactions, { ...transaction }],\n\t\t\t});\n\t\t}\n\t};\n\treturn { addTransaction };\n};\n"],"names":["getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random","document","useUserDataContext","useState","amount","setAmount","dispatchNotification","useNotificationContext","useUpdateDocument","updateDocument","isPending","error","navigate","useNavigate","addTransaction","transaction","id","transactions","useTransaction","handleAddMoney","e","preventDefault","type","ACTIONS","payload","balance","Math","round","title","createdAt","Timestamp","Date","uuidv4","className","styles","max","placeholder","value","onChange","target","onClick","disabled"],"sourceRoot":""}