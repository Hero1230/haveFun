{"version":3,"file":"static/js/227.b20e66a4.chunk.js","mappings":"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","sources":["webpack://have-fun/./src/pages/settings/Settings.module.scss?1f5c","webpack://have-fun/./src/pages/settings/settingsForm/SettingsForm.module.scss?806a","pages/settings/settingsForm/SettingsForm.js","webpack://have-fun/./src/pages/settings/updateAvatar/AvatarUpdate.module.scss?a349","pages/settings/updateAvatar/AvatarUpdate.js","pages/settings/Settings.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile-settings\":\"Settings_profile-settings__d3gAU\",\"avatar-section\":\"Settings_avatar-section__dgkis\"};","// extracted by mini-css-extract-plugin\nexport default {\"settings-form\":\"SettingsForm_settings-form__lwFmh\",\"checkboxs\":\"SettingsForm_checkboxs__ZLzff\",\"toggle-container\":\"SettingsForm_toggle-container__VAYdh\",\"toggle\":\"SettingsForm_toggle__e+d+k\",\"label\":\"SettingsForm_label__IqEpG\",\"ball\":\"SettingsForm_ball__rL7Wb\",\"slideOn\":\"SettingsForm_slideOn__xmUW4\",\"slideOff\":\"SettingsForm_slideOff__uscx7\"};","import { updateEmail, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport { ACTIONS } from \"../../../actions/notification/Actions\";\nimport { useAuthContext } from \"../../../hooks/auth/useAuthContext\";\nimport { useUserDocument } from \"../../../hooks/data/useUserDocument\";\nimport { useUpdateDocument } from \"../../../hooks/data/useUpdateDocument\";\nimport { useNotificationContext } from \"../../../hooks/notification/useNotificationContext\";\nimport styles from \"./SettingsForm.module.scss\";\n\nconst ProfileForm = () => {\n\tconst { user } = useAuthContext();\n\tconst { document } = useUserDocument(\"users\");\n\tconst [displayName, setDisplayName] = useState(user && user.displayName);\n\tconst [email, setEmail] = useState(user && user.email);\n\tconst { updateDocument, isPending } = useUpdateDocument();\n\tconst { dispatchNotification } = useNotificationContext();\n\tconst [notifications, setNotifications] = useState(true);\n\n\tconst saveProfile = async () => {\n\t\tawait updateDocument(\"users\", user.uid, {\n\t\t\temail,\n\t\t\tdisplayName,\n\t\t\tnotifications,\n\t\t});\n\n\t\tawait updateProfile(user, { email, displayName });\n\n\t\tif (user.email !== email) {\n\t\t\tawait updateEmail(user, email);\n\t\t}\n\n\t\tdispatchNotification({\n\t\t\ttype: ACTIONS.SUCCESS,\n\t\t\tpayload: \"Profile has been saved\",\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (displayName.trim().length === 0 || email.trim().length === 0) {\n\t\t\tdispatchNotification({\n\t\t\t\ttype: ACTIONS.ERROR,\n\t\t\t\tpayload: \"Fields cannot be empty!\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (displayName.length > 15 || email.length > 20) {\n\t\t\tdispatchNotification({\n\t\t\t\ttype: ACTIONS.ERROR,\n\t\t\t\tpayload: \"Email or user name is too long!\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (user.email !== email && document.isTesting) {\n\t\t\tdispatchNotification({\n\t\t\t\ttype: ACTIONS.ERROR,\n\t\t\t\tpayload: \"You are on testing account, this option is disabled!\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tsaveProfile();\n\t};\n\tuseEffect(() => {\n\t\tif (document) {\n\t\t\tsetNotifications(document.notifications);\n\t\t}\n\t}, [document]);\n\treturn (\n\t\t<form className={styles[\"settings-form\"]} onSubmit={handleSubmit}>\n\t\t\t<label className={styles.fields}>\n\t\t\t\t<span>USER NAME</span>\n\t\t\t\t<input\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={displayName}\n\t\t\t\t\tonChange={(e) => setDisplayName(e.target.value.split(\" \").join(\"\"))}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label className={styles.fields}>\n\t\t\t\t<span>EMAIL</span>\n\t\t\t\t<input\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value.split(\" \").join(\"\"))}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<div className={styles.checkboxs}>\n\t\t\t\t<div className={styles[\"toggle-container\"]}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={styles.toggle}\n\t\t\t\t\t\tid=\"notifications\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={notifications}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetNotifications(e.target.checked);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"notifications\" className={styles.label}>\n\t\t\t\t\t\t<div className={styles.ball}></div>\n\t\t\t\t\t</label>\n\t\t\t\t\t<span>NOTIFICATIONS</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{!isPending && <button className=\"btn\">Save</button>}\n\t\t\t{isPending && (\n\t\t\t\t<button className=\"btn\" disabled>\n\t\t\t\t\tSaving...\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</form>\n\t);\n};\n\nexport default ProfileForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"buttons\":\"AvatarUpdate_buttons__CK1XC\",\"delete-btn\":\"AvatarUpdate_delete-btn__FHAo+\"};","import {\n\tdeleteObject,\n\tgetDownloadURL,\n\tgetStorage,\n\tref,\n\tuploadBytes,\n} from \"firebase/storage\";\nimport { useRef, useState } from \"react\";\nimport { useAuthContext } from \"../../../hooks/auth/useAuthContext\";\nimport { useUpdateDocument } from \"../../../hooks/data/useUpdateDocument\";\nimport { useUserDataContext } from \"../../../hooks/data/useUserDataContext\";\nimport styles from \"./AvatarUpdate.module.scss\";\n\nconst AvatarUpdate = ({ setError, setSuccess }) => {\n\tconst { user } = useAuthContext();\n\tconst { document } = useUserDataContext();\n\tconst storageRef = ref(getStorage(), `images/${user.uid}.jpg`);\n\tconst { updateDocument } = useUpdateDocument();\n\tconst inputRef = useRef(null);\n\tconst [isSavingAvatar, setIsSavingAvatar] = useState(false);\n\n\tconst handleUpdate = () => {\n\t\tinputRef.current.click();\n\t};\n\n\tconst handleDelete = async () => {\n\t\tif (document) {\n\t\t\tif (!document.photoURL) {\n\t\t\t\tsetError(\"Cannot remove stock avatar image!\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tawait deleteObject(storageRef);\n\t\tawait updateDocument(\"users\", user.uid, { photoURL: \"start\" });\n\t\tsetSuccess(\"Avatar successfully removed!\");\n\t};\n\n\tconst handleFileChange = async (event) => {\n\t\tsetIsSavingAvatar(true);\n\t\tsetError(null);\n\t\tconst fileObj = event.target.files && event.target.files[0];\n\n\t\tif (!fileObj) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!fileObj.type.includes(\"image\")) {\n\t\t\tsetError(\"Please select image file\");\n\t\t\tsetIsSavingAvatar(false);\n\t\t\treturn;\n\t\t}\n\n\t\tevent.target.value = null;\n\n\t\tawait uploadBytes(storageRef, fileObj);\n\n\t\tconst photo = await getDownloadURL(storageRef);\n\n\t\tawait updateDocument(\"users\", user.uid, { photoURL: photo });\n\t\tsetIsSavingAvatar(false);\n\t\tsetSuccess(\"Avatar successfully uploaded!\");\n\t};\n\treturn (\n\t\t<div className={styles.buttons}>\n\t\t\t<input\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tref={inputRef}\n\t\t\t\ttype=\"file\"\n\t\t\t\tonChange={handleFileChange}\n\t\t\t/>\n\t\t\t{!isSavingAvatar && (\n\t\t\t\t<button className=\"btn\" onClick={handleUpdate}>\n\t\t\t\t\tUpload a new avatar\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isSavingAvatar && (\n\t\t\t\t<button className=\"btn\" disabled>\n\t\t\t\t\tUploading...\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button className={styles[\"delete-btn\"]} onClick={handleDelete}>\n\t\t\t\tDelete avatar\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default AvatarUpdate;\n","import Avatar from \"../../components/avatar/Avatar\";\nimport styles from \"./Settings.module.scss\";\nimport SettingsForm from \"./settingsForm/SettingsForm\";\nimport AvatarUpdate from \"./updateAvatar/AvatarUpdate\";\nimport { useEffect, useState } from \"react\";\nimport { useUserDataContext } from \"../../hooks/data/useUserDataContext\";\nimport { useNotificationContext } from \"../../hooks/notification/useNotificationContext\";\nimport { ACTIONS } from \"../../actions/notification/Actions\";\n\nconst Profile = () => {\n\tconst [error, setError] = useState(null);\n\tconst [success, setSuccess] = useState(null);\n\tconst { document } = useUserDataContext();\n\tconst { dispatchNotification } = useNotificationContext();\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tdispatchNotification({ type: ACTIONS.ERROR, payload: error });\n\t\t}\n\t}, [error, dispatchNotification]);\n\n\tuseEffect(() => {\n\t\tif (success) {\n\t\t\tdispatchNotification({ type: ACTIONS.SUCCESS, payload: success });\n\t\t}\n\t}, [success, dispatchNotification]);\n\n\treturn (\n\t\t<div className={styles[\"profile-settings\"]}>\n\t\t\t<h2>Edit profile</h2>\n\t\t\t<div className={styles[\"avatar-section\"]}>\n\t\t\t\t{document.photoURL ? (\n\t\t\t\t\t<Avatar src={document.photoURL} borderColor=\"purple\" />\n\t\t\t\t) : (\n\t\t\t\t\t<Avatar src=\"loading\" />\n\t\t\t\t)}\n\t\t\t\t<AvatarUpdate setError={setError} setSuccess={setSuccess} />\n\t\t\t</div>\n\t\t\t<SettingsForm />\n\t\t</div>\n\t);\n};\n\nexport default Profile;\n"],"names":["user","useAuthContext","document","useUserDocument","useState","displayName","setDisplayName","email","setEmail","useUpdateDocument","updateDocument","isPending","dispatchNotification","useNotificationContext","notifications","setNotifications","saveProfile","uid","updateProfile","updateEmail","type","ACTIONS","payload","useEffect","className","styles","onSubmit","e","preventDefault","trim","length","isTesting","required","value","onChange","target","split","join","id","checked","htmlFor","disabled","setError","setSuccess","useUserDataContext","storageRef","ref","getStorage","inputRef","useRef","isSavingAvatar","setIsSavingAvatar","handleDelete","photoURL","deleteObject","handleFileChange","event","fileObj","files","includes","uploadBytes","getDownloadURL","photo","style","display","onClick","current","click","error","success","Avatar","src","borderColor","SettingsForm"],"sourceRoot":""}